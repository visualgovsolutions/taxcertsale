#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Check if commit message follows conventional commit format
commit_msg_file=$1
commit_msg=$(cat $commit_msg_file)

# Regex for conventional commits
conventional_pattern="^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\([a-z0-9-]+\))?: .{1,100}"

if ! echo "$commit_msg" | grep -E "$conventional_pattern" > /dev/null; then
  echo "❌ Invalid commit message format."
  echo "Please use the conventional commit format:"
  echo "  <type>(<scope>): <description>"
  echo ""
  echo "Examples:"
  echo "  feat(auth): implement login form"
  echo "  fix(api): resolve user data fetch issue"
  echo "  docs: update README"
  echo ""
  echo "See CODE_STANDARDS.md for more details."
  exit 1
fi

# Enforce reasonable message length
message_length=$(echo "$commit_msg" | head -1 | wc -c)
if [ "$message_length" -gt 100 ]; then
  echo "❌ Commit message too long (${message_length} chars)."
  echo "The first line should be 100 characters or less."
  exit 1
fi

# Check for suspicious patterns in the commit message
if grep -Ei '(rm\s+-rf|drop\s+table|shutdown|delete\s+from)' "$commit_msg_file"; then
  echo "⚠️  WARNING: Your commit message contains potentially dangerous commands."
  echo "Are you sure you want to continue? (yes/no)"
  read answer
  if [ "$answer" != "yes" ]; then
    echo "❌ Commit aborted."
    exit 1
  fi
fi 